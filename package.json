{
  "name": "project",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "engines": {
    "node": ">=20.0.0"
  },
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "npx dotenv-cli -e .env.development -- ts-node-dev --respawn --transpile-only src/main.ts",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "nest:generate:resource": "nest g resource <entity-name>",
    "nestjs:generate:module": "nest g module <entity-name>/infraestructure",
    "nestjs:generate:service": "nest g service <entity-name>/infraestructure",
    "nestjs:generate:controller": "nest g controller <entity-name>/infraestructure",
    "nestjs:generate:filter": "nest g filter shared/infraestructure/exception-filters/new-filter",
    "test": "npx dotenv-cli -e .env.test -- jest --runInBand",
    "test:unit": "npx dotenv-cli -e .env.test -- jest --runInBand --config ./jest.unit.config.ts",
    "test:unit:auth": "npm run test:unit auth.service",
    "test:unit:notification-output-mapper": "npm run test:unit notification-output.mapper",
    "test:unit:notification-send-notification-usecase": "npm run test:unit send-notification.usecase",
    "test.unit:notification-entity": "npm run test:unit notification.entity",
    "test:int": "npx dotenv-cli -e .env.test -- jest --runInBand --config ./jest.int.config.ts",
    "test:int:notification-entity": "npm run test:int notification.entity",
    "test:int:notification-prisma-repository": "npm run test:int notification-prisma.repository",
    "test:int:notification-notification-model-mapper": "npm run test:int notification-model.mapper",
    "test:int:notification-notification-prisma-repository": "npm run test:int notification-prisma.repository",
    "test:watch": "jest --watch",
    "test:cov": "npx dotenv-cli -e .env.test -- jest --coverage --runInBand --config ./jest.config.ts",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "prisma:generate:test": "npx dotenv-cli -e .env.test -- npx prisma generate --schema ./src/shared/infraestructure/database/prisma/schema.prisma",
    "prisma:migrate:test": "npx dotenv-cli -e .env.test -- npx prisma migrate dev --schema ./src/shared/infraestructure/database/prisma/schema.prisma",
    "prisma:generate:development": "npx dotenv-cli -e .env.development -- npx prisma generate --schema ./src/shared/infraestructure/database/prisma/schema.prisma",
    "prisma:generate": "npx dotenv-cli -e .env -- npx prisma generate --schema ./src/shared/infraestructure/database/prisma/schema.prisma",
    "prisma:migrate:development": "npx dotenv-cli -e .env.development -- npx prisma migrate dev --schema ./src/shared/infraestructure/database/prisma/schema.prisma",
    "prisma:migrate:production": "npx dotenv-cli -e .env.production -- npx prisma migrate deploy --schema ./src/shared/infraestructure/database/prisma/schema.prisma",
    "prisma:migrate:reset:development": "npx dotenv-cli -e .env.development -- npx prisma migrate reset --schema ./src/shared/infraestructure/database/prisma/schema.prisma",
    "docker:build:test": "docker build --no-cache -t notifications-test .",
    "docker:run:test": "docker run -p 8080:8080 notifications-test"
  },
  "dependencies": {
    "@fastify/static": "^7.0.4",
    "@google-cloud/pubsub": "^4.10.0",
    "@google-cloud/storage": "^7.15.0",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.3.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/platform-fastify": "^10.4.15",
    "@nestjs/swagger": "^7.4.2",
    "@prisma/client": "^6.2.1",
    "axios": "^1.7.9",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "dotenv-cli": "^8.0.0",
    "project": "file:",
    "reflect-metadata": "^0.2.0",
    "tsyringe": "^4.8.0"
  },
  "devDependencies": {
    "@faker-js/faker": "^9.3.0",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/platform-express": "^10.4.15",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/supertest": "^6.0.0",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "eslint": "^8.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "prisma": "^6.2.1",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
